# Generated by Django 2.1.1 on 2018-10-09 17:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('death_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Animals',
                'verbose_name': 'Animal',
            },
        ),
        migrations.CreateModel(
            name='AnimalPerson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='animal_person_animal', to='core.Animal')),
            ],
        ),
        migrations.CreateModel(
            name='AnimalRegion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='animal_region_animal', to='core.Animal')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AnimalStay',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField(blank=True, null=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='animal_stays', to='core.Animal')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cleaning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('length', models.DurationField()),
                ('done', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CleaningPerson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('cleaning', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cleaning_person_cleaning', to='core.Cleaning')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Enclosure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('min_cleaning_duration', models.DurationField()),
                ('min_cleaners_count', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EnclosurePerson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('enclosure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='enclosure_person_enclosure', to='core.Enclosure')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Feeding',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('date', models.DateTimeField()),
                ('length', models.DurationField()),
                ('done', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeedingAnimal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feeding_animal_animal', to='core.Animal')),
                ('feeding', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feeding_animal_feeding', to='core.Feeding')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=256)),
                ('last_name', models.CharField(max_length=256)),
                ('birth_date', models.DateField()),
                ('education', models.TextField()),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeAnimal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('identifier', models.CharField(blank=True, max_length=128, null=True, unique=True, verbose_name='Identifier')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('order', models.PositiveSmallIntegerField(verbose_name='Order')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeCleaningAccessory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('identifier', models.CharField(blank=True, max_length=128, null=True, unique=True, verbose_name='Identifier')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('order', models.PositiveSmallIntegerField(verbose_name='Order')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeCountry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('identifier', models.CharField(blank=True, max_length=128, null=True, unique=True, verbose_name='Identifier')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('order', models.PositiveSmallIntegerField(verbose_name='Order')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeEnclosure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('identifier', models.CharField(blank=True, max_length=128, null=True, unique=True, verbose_name='Identifier')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('order', models.PositiveSmallIntegerField(verbose_name='Order')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeEnclosureTypeCleaningAccessory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('type_cleaning_accessory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='type_enclosure_type_cleaning_accessory_type_cleaning_accessory', to='core.TypeCleaningAccessory')),
                ('type_enclosure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='type_enclosure_type_cleaning_accessory_type_enclosure', to='core.TypeEnclosure')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeFeed',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('identifier', models.CharField(blank=True, max_length=128, null=True, unique=True, verbose_name='Identifier')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('order', models.PositiveSmallIntegerField(verbose_name='Order')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeRegion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('identifier', models.CharField(blank=True, max_length=128, null=True, unique=True, verbose_name='Identifier')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('order', models.PositiveSmallIntegerField(verbose_name='Order')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('x_created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('x_updated', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('identifier', models.CharField(blank=True, max_length=128, null=True, unique=True, verbose_name='Identifier')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('order', models.PositiveSmallIntegerField(verbose_name='Order')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='typeenclosure',
            name='required_cleaning_accessory',
            field=models.ManyToManyField(through='core.TypeEnclosureTypeCleaningAccessory', to='core.TypeCleaningAccessory'),
        ),
        migrations.AddField(
            model_name='person',
            name='type_role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_type_role', to='core.TypeRole'),
        ),
        migrations.AddField(
            model_name='person',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feeding',
            name='animals',
            field=models.ManyToManyField(through='core.FeedingAnimal', to='core.Animal'),
        ),
        migrations.AddField(
            model_name='feeding',
            name='executor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feeding_executor', to='core.Person'),
        ),
        migrations.AddField(
            model_name='feeding',
            name='type_feed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feeding_feed_type', to='core.TypeFeed'),
        ),
        migrations.AddField(
            model_name='enclosureperson',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='enclosure_person_person', to='core.Person'),
        ),
        migrations.AddField(
            model_name='enclosure',
            name='trained_persons',
            field=models.ManyToManyField(through='core.EnclosurePerson', to='core.Person'),
        ),
        migrations.AddField(
            model_name='enclosure',
            name='type_enclosure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='enclosure_type_enclosure', to='core.TypeEnclosure'),
        ),
        migrations.AddField(
            model_name='cleaningperson',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cleaning_person_person', to='core.Person'),
        ),
        migrations.AddField(
            model_name='cleaning',
            name='enclosure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cleaning_enclosure', to='core.Enclosure'),
        ),
        migrations.AddField(
            model_name='cleaning',
            name='executors',
            field=models.ManyToManyField(through='core.CleaningPerson', to='core.Person'),
        ),
        migrations.AddField(
            model_name='animalstay',
            name='enclosure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='animal_stays', to='core.Enclosure'),
        ),
        migrations.AddField(
            model_name='animalregion',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='animal_region_region', to='core.TypeRegion'),
        ),
        migrations.AddField(
            model_name='animalperson',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='animal_person_person', to='core.Person'),
        ),
        migrations.AddField(
            model_name='animal',
            name='occurence_region',
            field=models.ManyToManyField(through='core.AnimalRegion', to='core.TypeRegion'),
        ),
        migrations.AddField(
            model_name='animal',
            name='origin_country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='animal_origin_country', to='core.TypeCountry'),
        ),
        migrations.AddField(
            model_name='animal',
            name='parent1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='animal_parent1', to='core.Animal'),
        ),
        migrations.AddField(
            model_name='animal',
            name='parent2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='animal_parent2', to='core.Animal'),
        ),
        migrations.AddField(
            model_name='animal',
            name='trained_person',
            field=models.ManyToManyField(through='core.AnimalPerson', to='core.Person'),
        ),
        migrations.AddField(
            model_name='animal',
            name='type_animal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='animal_type_animal', to='core.TypeAnimal'),
        ),
        migrations.AlterUniqueTogether(
            name='animalperson',
            unique_together={('animal', 'person')},
        ),
    ]
